#!/usr/bin/env bash
# A package script modelled after Arch's PKGBUILD
set -e

if [ $# != 1 ]; then
	echo "usage: $0 <debbuild>"
	exit 1
fi

SD_ROOTDIR="${PWD}"
SD_DEBIANDIR="${SD_ROOTDIR}/debian"
SD_DEBBUILD="$1"

# preinitialize some values
pkgname="FIXME"
pkgver="FIXME"
pkgrel=0
pkgdesc="no package description specified"
arch="i386"
url="http://libfirm.org"
license="Unknown"
depends=
makedepends=('build-essential')
conflicts=
build() {
	cd "$srcdir/$pkgname-$pkgver"
	./configure --prefix=/usr
	make
	make DESTDIR="${pkgdir}" install
}

# now read/execute the DEBUILD file
source "${SD_DEBBUILD}"

srcdir="${PWD}/src/"
pkgdir="${PWD}/pkg/"

clear_dir() {
	rm -fr "$1"
	mkdir -p "$1"
}

clear_dir "$srcdir"
clear_dir "$pkgdir"

# download stuff
>&2 echo "downloading ..."
cd "$SD_ROOTDIR"
echo "${source}" | while read md5 url
do
	file="${url##*/}"
	[ -f "$file" ] || curl "${url}" -O -C - -L
	md5_actual=$(md5sum "${file}" | cut -c 1-32)
	if [ "${md5}" != "${md5_actual}" ]
	then
		echo "MD5 mismatch for ${file}"
		exit 1
	fi
	tar -xf "${SD_ROOTDIR}/${file}" -C "${srcdir}" || true
done

# build and "install" everything
>&2 echo "building ..."
cd "${srcdir}"
build || $(echo "error in build"; exit 1)

# create a deb file
>&2 echo "make deb ..."
cd "${SD_ROOTDIR}"
# debian package version
echo "2.0" >debian-binary
clear_dir "$SD_DEBIANDIR"
# package contents
cd "${pkgdir}"
tar --owner=root --group=root  -cJf "${SD_ROOTDIR}/data.tar.xz" .
# debian package meta data
find . -type f -print0 | xargs -0 md5sum > "$SD_DEBIANDIR/md5sums"
cd "${SD_DEBIANDIR}"
echo "#!/bin/sh
" > postinst
echo "#!/bin/sh
" > prerm
chmod -f 0755 config postinst postrm preinst prerm || true # ignore error return code on missing files
cat > control << EOF
Package: $pkgname
Version: $pkgver
Architecture: $arch
Maintainer: SIMPLE DEB <nobody@web.net>
Depends: $depends
Homepage: $url
Installed-Size: $(du -s "$pkgdir" | cut -f 1)
Conflicts: ${conflicts}
Date: $(date)
Description: $pkgdesc
 .
 (This package was created with simpledeb)
EOF
tar --owner=root --group=root -czf "${SD_ROOTDIR}/control.tar.gz" *
cd "${SD_ROOTDIR}"
ar r "${pkgname}-${pkgver}-${pkgrel}.deb" debian-binary control.tar.gz data.tar.xz

# cleanup
rm -rf "${SD_DEBIANDIR}" "${srcdir}" "${pkgdir}"
rm debian-binary control.tar.gz data.tar.xz
